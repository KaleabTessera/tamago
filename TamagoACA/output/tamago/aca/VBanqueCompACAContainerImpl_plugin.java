package tamago.aca;
import tamago.ext.tamagocc.*;
import tamago.*;
import java.util.Hashtable;
import java.util.ArrayList;
/*
    
 ******************************************
 *             VBanqueCompACA             *
 ******************************************
 *
 * DO NOT EDIT THIS FILE.
 * THIS FILE IS GENERATED AUTOMATICALLY BY TAMAGOCC
 * Created date : Fri Apr 22 11:41:23 CEST 2011
 * authors : Hakim Belhaouari and Frederic Peschanski
 * site : http://www-poleia.lip6.fr/~belhaouari/Tamago/

*/
public class VBanqueCompACAContainerImpl_plugin
     extends tamago.ext.tamagocc.TamagoCCContainerImpl
    implements tamago.aca.VBanqueCompACAContainer
{
    // Members Variables
    private tamago.aca.VBanqueCompACA tamago_decorated_component;

    // Properties

    // Methods
    protected void fetchServiceBehavior(TamagoCCMethodID mid) throws TamagoCCServiceBehaviorException{
        if((current.id() == 34)) {
            if(methodID("validate").equals(mid)) {
                current = states.get(8);
                return ;
            }
        }
        if((current.id() == 33)) {
            if(methodID("deposit").equals(mid)) {
                current = states.get(31);
                return ;
            }
            if(methodID("modify").equals(mid)) {
                current = states.get(9);
                return ;
            }
            if(methodID("validate").equals(mid)) {
                current = states.get(22);
                return ;
            }
        }
        if((current.id() == 32)) {
            if(methodID("validate").equals(mid)) {
                current = states.get(6);
                return ;
            }
            if(methodID("cancel").equals(mid)) {
                current = states.get(34);
                return ;
            }
        }
        if((current.id() == 31)) {
            if(methodID("modify").equals(mid)) {
                current = states.get(29);
                return ;
            }
            if(methodID("validate").equals(mid)) {
                current = states.get(16);
                return ;
            }
            if(methodID("cancel").equals(mid)) {
                current = states.get(10);
                return ;
            }
        }
        if((current.id() == 30)) {
            if(methodID("deposit").equals(mid)) {
                current = states.get(26);
                return ;
            }
            if(methodID("validate").equals(mid)) {
                current = states.get(28);
                return ;
            }
        }
        if((current.id() == 29)) {
            if(methodID("validate").equals(mid)) {
                current = states.get(26);
                return ;
            }
            if(methodID("cancel").equals(mid)) {
                current = states.get(19);
                return ;
            }
            if(methodID("modify").equals(mid)) {
                current = states.get(32);
                return ;
            }
        }
        if((current.id() == 28)) {
            if(methodID("deposit").equals(mid)) {
                current = states.get(21);
                return ;
            }
            if(methodID("validate").equals(mid)) {
                current = states.get(2);
                return ;
            }
        }
        if((current.id() == 27)) {
            if(methodID("validate").equals(mid)) {
                current = states.get(1);
                return ;
            }
        }
        if((current.id() == 26)) {
            if(methodID("cancel").equals(mid)) {
                current = states.get(24);
                return ;
            }
            if(methodID("validate").equals(mid)) {
                current = states.get(21);
                return ;
            }
            if(methodID("modify").equals(mid)) {
                current = states.get(6);
                return ;
            }
        }
        if((current.id() == 25)) {
            if(methodID("cancel").equals(mid)) {
                current = states.get(27);
                return ;
            }
            if(methodID("validate").equals(mid)) {
                current = states.get(0);
                return ;
            }
        }
        if((current.id() == 24)) {
            if(methodID("validate").equals(mid)) {
                current = states.get(23);
                return ;
            }
            if(methodID("modify").equals(mid)) {
                current = states.get(8);
                return ;
            }
        }
        if((current.id() == 23)) {
            if(methodID("validate").equals(mid)) {
                current = states.get(13);
                return ;
            }
            if(methodID("modify").equals(mid)) {
                current = states.get(7);
                return ;
            }
        }
        if((current.id() == 22)) {
            if(methodID("deposit").equals(mid)) {
                current = states.get(16);
                return ;
            }
            if(methodID("modify").equals(mid)) {
                current = states.get(30);
                return ;
            }
            if(methodID("validate").equals(mid)) {
                current = states.get(20);
                return ;
            }
        }
        if((current.id() == 21)) {
            if(methodID("cancel").equals(mid)) {
                current = states.get(23);
                return ;
            }
            if(methodID("validate").equals(mid)) {
                current = states.get(11);
                return ;
            }
            if(methodID("modify").equals(mid)) {
                current = states.get(5);
                return ;
            }
        }
        if((current.id() == 20)) {
            if(methodID("deposit").equals(mid)) {
                current = states.get(12);
                return ;
            }
            if(methodID("modify").equals(mid)) {
                current = states.get(28);
                return ;
            }
        }
        if((current.id() == 19)) {
            if(methodID("validate").equals(mid)) {
                current = states.get(24);
                return ;
            }
            if(methodID("modify").equals(mid)) {
                current = states.get(34);
                return ;
            }
        }
        if((current.id() == 18)) {
            if(methodID("modify").equals(mid)) {
                current = states.get(11);
                return ;
            }
            if(methodID("cancel").equals(mid)) {
                current = states.get(3);
                return ;
            }
        }
        if((current.id() == 17)) {
            if(methodID("modify").equals(mid)) {
                current = states.get(1);
                return ;
            }
        }
        if((current.id() == 16)) {
            if(methodID("modify").equals(mid)) {
                current = states.get(26);
                return ;
            }
            if(methodID("cancel").equals(mid)) {
                current = states.get(15);
                return ;
            }
            if(methodID("validate").equals(mid)) {
                current = states.get(12);
                return ;
            }
        }
        if((current.id() == 15)) {
            if(methodID("modify").equals(mid)) {
                current = states.get(24);
                return ;
            }
            if(methodID("validate").equals(mid)) {
                current = states.get(14);
                return ;
            }
        }
        if((current.id() == 14)) {
            if(methodID("modify").equals(mid)) {
                current = states.get(23);
                return ;
            }
            if(methodID("validate").equals(mid)) {
                current = states.get(3);
                return ;
            }
        }
        if((current.id() == 13)) {
            if(methodID("modify").equals(mid)) {
                current = states.get(27);
                return ;
            }
            if(methodID("validate").equals(mid)) {
                current = states.get(17);
                return ;
            }
        }
        if((current.id() == 12)) {
            if(methodID("modify").equals(mid)) {
                current = states.get(21);
                return ;
            }
            if(methodID("cancel").equals(mid)) {
                current = states.get(14);
                return ;
            }
            if(methodID("validate").equals(mid)) {
                current = states.get(18);
                return ;
            }
        }
        if((current.id() == 11)) {
            if(methodID("cancel").equals(mid)) {
                current = states.get(13);
                return ;
            }
            if(methodID("modify").equals(mid)) {
                current = states.get(25);
                return ;
            }
            if(methodID("validate").equals(mid)) {
                current = states.get(4);
                return ;
            }
        }
        if((current.id() == 10)) {
            if(methodID("modify").equals(mid)) {
                current = states.get(19);
                return ;
            }
            if(methodID("validate").equals(mid)) {
                current = states.get(15);
                return ;
            }
        }
        if((current.id() == 9)) {
            if(methodID("deposit").equals(mid)) {
                current = states.get(29);
                return ;
            }
            if(methodID("validate").equals(mid)) {
                current = states.get(30);
                return ;
            }
        }
        if((current.id() == 8)) {
            if(methodID("validate").equals(mid)) {
                current = states.get(7);
                return ;
            }
        }
        if((current.id() == 7)) {
            if(methodID("validate").equals(mid)) {
                current = states.get(27);
                return ;
            }
        }
        if((current.id() == 6)) {
            if(methodID("cancel").equals(mid)) {
                current = states.get(8);
                return ;
            }
            if(methodID("validate").equals(mid)) {
                current = states.get(5);
                return ;
            }
        }
        if((current.id() == 5)) {
            if(methodID("cancel").equals(mid)) {
                current = states.get(7);
                return ;
            }
            if(methodID("validate").equals(mid)) {
                current = states.get(25);
                return ;
            }
        }
        if((current.id() == 4)) {
            if(methodID("cancel").equals(mid)) {
                current = states.get(17);
                return ;
            }
            if(methodID("modify").equals(mid)) {
                current = states.get(0);
                return ;
            }
        }
        if((current.id() == 3)) {
            if(methodID("modify").equals(mid)) {
                current = states.get(13);
                return ;
            }
        }
        if((current.id() == 2)) {
            if(methodID("deposit").equals(mid)) {
                current = states.get(11);
                return ;
            }
        }
        if((current.id() == 1)) {
        }
        if((current.id() == 0)) {
            if(methodID("cancel").equals(mid)) {
                current = states.get(1);
                return ;
            }
        }
    }


    /*
        Don't modify this constructor !

    */
    public VBanqueCompACAContainerImpl_plugin (tamago.aca.VBanqueCompACA component)
    {
        tamago_decorated_component = ((tamago.aca.VBanqueCompACA) component);
        //  main IDs
        registerID("deposit", "deposit");
        registerID("modify", "modify");
        registerID("validate", "validate");
        //  secondary IDs
        registerID("deposit", "deposit");
        registerID("modify", "modify");
        registerID("validate", "validate");
        //  states generations
        TamagoCCState state = null;
        state = newstate();
        include(state, "34");
        allow(state, methodID("cancel"));
        state = newstate();
        include(state, "33");
        state = newstate();
        include(state, "32");
        allow(state, methodID("deposit"));
        state = newstate();
        include(state, "31");
        allow(state, methodID("modify"));
        state = newstate();
        include(state, "30");
        allow(state, methodID("cancel"));
        allow(state, methodID("modify"));
        state = newstate();
        include(state, "19");
        allow(state, methodID("cancel"));
        allow(state, methodID("validate"));
        state = newstate();
        include(state, "18");
        allow(state, methodID("cancel"));
        allow(state, methodID("validate"));
        state = newstate();
        include(state, "17");
        allow(state, methodID("validate"));
        state = newstate();
        include(state, "16");
        allow(state, methodID("validate"));
        state = newstate();
        include(state, "15");
        allow(state, methodID("deposit"));
        allow(state, methodID("validate"));
        state = newstate();
        include(state, "14");
        allow(state, methodID("modify"));
        allow(state, methodID("validate"));
        state = newstate();
        include(state, "13");
        allow(state, methodID("cancel"));
        allow(state, methodID("modify"));
        allow(state, methodID("validate"));
        state = newstate();
        include(state, "12");
        allow(state, methodID("modify"));
        allow(state, methodID("cancel"));
        allow(state, methodID("validate"));
        state = newstate();
        include(state, "11");
        allow(state, methodID("modify"));
        allow(state, methodID("validate"));
        state = newstate();
        include(state, "10");
        allow(state, methodID("modify"));
        allow(state, methodID("validate"));
        state = newstate();
        include(state, "9");
        allow(state, methodID("modify"));
        allow(state, methodID("validate"));
        state = newstate();
        include(state, "8");
        allow(state, methodID("modify"));
        allow(state, methodID("cancel"));
        allow(state, methodID("validate"));
        state = newstate();
        include(state, "29");
        allow(state, methodID("modify"));
        state = newstate();
        include(state, "28");
        allow(state, methodID("modify"));
        allow(state, methodID("cancel"));
        state = newstate();
        include(state, "7");
        allow(state, methodID("validate"));
        allow(state, methodID("modify"));
        state = newstate();
        include(state, "27");
        allow(state, methodID("deposit"));
        allow(state, methodID("modify"));
        state = newstate();
        include(state, "6");
        allow(state, methodID("cancel"));
        allow(state, methodID("validate"));
        allow(state, methodID("modify"));
        state = newstate();
        include(state, "26");
        allow(state, methodID("deposit"));
        allow(state, methodID("modify"));
        allow(state, methodID("validate"));
        state = newstate();
        include(state, "5");
        allow(state, methodID("validate"));
        allow(state, methodID("modify"));
        state = newstate();
        include(state, "4");
        allow(state, methodID("validate"));
        allow(state, methodID("modify"));
        state = newstate();
        include(state, "25");
        allow(state, methodID("cancel"));
        allow(state, methodID("validate"));
        state = newstate();
        include(state, "3");
        allow(state, methodID("cancel"));
        allow(state, methodID("validate"));
        allow(state, methodID("modify"));
        state = newstate();
        include(state, "24");
        allow(state, methodID("validate"));
        state = newstate();
        include(state, "23");
        allow(state, methodID("deposit"));
        allow(state, methodID("validate"));
        state = newstate();
        include(state, "2");
        allow(state, methodID("validate"));
        allow(state, methodID("cancel"));
        allow(state, methodID("modify"));
        state = newstate();
        include(state, "22");
        allow(state, methodID("deposit"));
        allow(state, methodID("validate"));
        state = newstate();
        include(state, "1");
        allow(state, methodID("modify"));
        allow(state, methodID("validate"));
        allow(state, methodID("cancel"));
        state = newstate();
        include(state, "21");
        allow(state, methodID("validate"));
        allow(state, methodID("cancel"));
        state = newstate();
        include(state, "0");
        allow(state, methodID("deposit"));
        allow(state, methodID("modify"));
        allow(state, methodID("validate"));
        state = newstate();
        include(state, "20");
        allow(state, methodID("validate"));
        //  Initialize the current default state
        current = states.get(33);
        // ----- if necessary you can add some code under this ligne ----
    }


    public RequiredService[] getRequiredServices(){
        RequiredService[] rs = new RequiredService[0];
        return rs;
    }


    public void bind(String label, TamagoCCService service) throws ServiceBindException{
        tamago_decorated_component.bind(label, service);
    }


    public boolean isBinded(){
        return (tamago_decorated_component == null);
    }


    public void core_set_properties(String property, Object value){
        throw new TamagoCCHotSwappingException();
    }


    public void tamago_hotswapping(TamagoCCComponent component){
        tamago_decorated_component = ((tamago.aca.VBanqueCompACA) component);
    }


    public void deposit(tamago.ext.aca.Quad quad) throws tamago.TamagoException{
        // Initialisation of variables
        // Invariant test before precondition
        // Environment of Precondition
        if(!canCallMethod(methodID("deposit"))) {
            throw new TamagoCCBehaviorException(methodID("deposit"));
        }
        // Precondition test
        // No precondition detected
        // Initialisation of at pre expression
        // redirect call
        tamago_decorated_component.deposit(quad);
        // Environment of Postcondition
        // Postcondition test
        // No postcondition detected
        // Invariant test after postcondition
        // Update behavioral's state
        fetchServiceBehavior(methodID("deposit"));
        // Return of the redirect method if needed
    }


    public void modify(tamago.ext.aca.Quad quad) throws tamago.TamagoException{
        // Initialisation of variables
        // Invariant test before precondition
        // Environment of Precondition
        if(!canCallMethod(methodID("modify"))) {
            throw new TamagoCCBehaviorException(methodID("modify"));
        }
        // Precondition test
        boolean __tamago_var_perco_5 = ((!isInState("22") || quad.user_Is(__sod_2)) && (!isInState("23") || quad.user_Is(__sod_2)) && (!isInState("15") || quad.user_Is(__sod_2)));
        if(!__tamago_var_perco_5) {
            java.util.ArrayList __tamago_var_perco_4 = new java.util.ArrayList();
            if(!__tamago_var_perco_5) {
                __tamago_var_perco_4.add(new tamago.ext.tamagocc.TamagoCCFailItem("((@InState("22") => quad.user_Is(__sod_2)) and (@InState("23") => quad.user_Is(__sod_2)) and (@InState("15") => quad.user_Is(__sod_2)))"));
            }
            throw new tamago.ext.tamagocc.TamagoCCFailPrecondition(__tamago_var_perco_4);
        }
        // Initialisation of at pre expression
        // redirect call
        tamago_decorated_component.modify(quad);
        // Environment of Postcondition
        // Postcondition test
        // No postcondition detected
        // Invariant test after postcondition
        // Update behavioral's state
        fetchServiceBehavior(methodID("modify"));
        // Return of the redirect method if needed
    }


    public void validate(tamago.ext.aca.Quad quad) throws tamago.TamagoException{
        // Initialisation of variables
        // Invariant test before precondition
        // Environment of Precondition
        if(!canCallMethod(methodID("validate"))) {
            throw new TamagoCCBehaviorException(methodID("validate"));
        }
        // Precondition test
        boolean __tamago_var_perco_9 = ((!isInState("22") || (quad.user_Is(__sod_2) && quad.user_Is(__sod_2))) && (!isInState("26") || quad.user_Is(__sod_3)) && (!isInState("27") || quad.user_Is(__sod_3)) && (!isInState("32") || quad.user_Is(__sod_2)));
        if(!__tamago_var_perco_9) {
            java.util.ArrayList __tamago_var_perco_8 = new java.util.ArrayList();
            if(!__tamago_var_perco_9) {
                __tamago_var_perco_8.add(new tamago.ext.tamagocc.TamagoCCFailItem("((@InState("22") => (quad.user_Is(__sod_2) and quad.user_Is(__sod_2))) and (@InState("26") => quad.user_Is(__sod_3)) and (@InState("27") => quad.user_Is(__sod_3)) and (@InState("32") => quad.user_Is(__sod_2)))"));
            }
            throw new tamago.ext.tamagocc.TamagoCCFailPrecondition(__tamago_var_perco_8);
        }
        // Initialisation of at pre expression
        // redirect call
        tamago_decorated_component.validate(quad);
        // Environment of Postcondition
        // Postcondition test
        // No postcondition detected
        // Invariant test after postcondition
        // Update behavioral's state
        fetchServiceBehavior(methodID("validate"));
        // Return of the redirect method if needed
    }
}